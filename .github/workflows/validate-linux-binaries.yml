name: Validate binary  images

on:
  push:
    branches:
      main
    paths:
      - .github/workflows/validate-linux-binaries.yml
  pull_request:
    paths:
      - .github/workflows/validate-linux-binaries.yml

jobs:
  generate-conda-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
    with:
      package-type: conda
      os: linux
      channel: all
  generate-wheels-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
    with:
      package-type: wheel
      os: linux
      channel: all
  generate-libtorch-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
    with:
      package-type: libtorch
      os: linux
      channel: all
  validate-linux-libtorch-binaries:
    needs: generate-libtorch-matrix
    strategy:
      matrix:
        ${{ fromJson(needs.generate-libtorch-matrix.outputs.matrix) }}
      fail-fast: false
    runs-on: "ubuntu-20.04"
    env:
      PYTHON_VERSION: ${{ matrix.python_version }}
    steps:
      - name: Checkout PyTorch builder
        uses: actions/checkout@v2
      - name: Install pytorch and smoke test
        env:
          ENV_NAME: env-libtorch-${{ github.run_id }}
          DESIRED_CUDA: ${{ matrix.desired_cuda }}
          BUILD_NAME: ${{ matrix.build_name }}
          ARCH: ${{matrix.architecture}}
        run: |
          sudo apt-get install unzip -y
          set -ex

          set CHANNEL = "https://download.pytorch.org/libtorch/${{ matrix.channel }}"
          #if [[ ${{ matrix.channel }} == "release" ]]; then
          #  set CHANNEL = "https://download.pytorch.org/libtorch"
          #fi

          set LIBTORCH_PATH = "https://download.pytorch.org/libtorch//${DESIRED_CUDA}/${BUILD_NAME}.zip"
          curl -O ${LIBTORCH_PATH}
          unzip "${BUILD_NAME}.zip"
