name: Validate binary  images

on:
  push:
    branches:
      main
    paths:
      - .github/workflows/validate-linux-binaries.yml
  pull_request:
    paths:
      - .github/workflows/validate-linux-binaries.yml

jobs:
  generate-conda-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
    with:
      package-type: conda
      os: linux
      channel: all
  generate-wheel-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
    with:
      package-type: wheel
      os: linux
      channel: all
  generate-libtorch-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
    with:
      package-type: libtorch
      os: linux
      channel: all
  validate-linux-binaries-conda:
    needs: generate-conda-matrix
    strategy:
      matrix:
        ${{ fromJson(needs.generate-conda-matrix.outputs.matrix) }}
      fail-fast: false
    runs-on: ${{ matrix.validation_runner }}
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python_version }}
          auto-update-conda: true
          miniconda-version: "latest"
          activate-environment: conda-env-${{ github.run_id }}
      - name: Checkout PyTorch builder
        uses: actions/checkout@v2
      - name: Check nvidia smi
        if: ${{ matrix.gpu_arch_type == 'cuda' }}
        run: |
          nvidia-smi
      - name: Install conda and run tests
        env:
          GPU_ARCH_VER: ${{ matrix.gpu_arch_version }}
          GPU_ARCH_TYPE: ${{ matrix.gpu_arch_type }}
          INSTALLATION: ${{ matrix.installation }}
        run: |
          set -ex
          conda install numpy
          eval $INSTALLATION
          conda info
          conda list
          conda run -p conda-env-${{ github.run_id }} python3  ./test/smoke_test/smoke_test.py
