name: Validate binary  images

on:
  push:
    branches:
      main
    paths:
      - .github/workflows/validate-linux-binaries.yml
  pull_request:
    paths:
      - .github/workflows/validate-linux-binaries.yml

env:
  DOCKER_REGISTRY: "docker.io"
  DOCKER_BUILDKIT: 1
  DOCKER_ID: ${{ secrets.DOCKER_ID }}
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  WITH_PUSH: ${{ github.event_name == 'push' }}

jobs:
  generate-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
    with:
      package-type: conda
      os: linux

  validate-linux-binaries:
    runs-on: ubuntu-20.04-m60
    needs: generate-matrix
    strategy:
      matrix:
        uses: ${{ fromJson(needs.generate-matrix.outputs.matrix).include }}
    env:
      GPU_ARCH_TYPE: cuda
      GPU_ARCH_VERSION: ${{ matrix.cuda_version }}
      PYTHON_VERSION: ${{ matrix.python_version }}
      PACKAGE_TYPE: conda
      DESIRED_PYTHON: ${{ matrix.python_version }}
      DESIRED_CUDA: ${{ matrix.cuda_version }}
    steps:
      - name: Checkout PyTorch builder
        uses: actions/checkout@v2
      - name: Install conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python_version }}
          auto-update-conda: true
          miniconda-version: "latest"
          activate-environment: testenv
      - name: Check nvidia smi
        run: |
          nvidia-smi
      - name: Conda Install pytorch and smoke test
        env:
          ENV_NAME: conda-env-${{ github.run_id }}
          CUDA_VER: ${{ matrix.cuda_version }}
        run: |
          set -ex
          conda create -yp ${ENV_NAME} python=${PYTHON_VERSION} numpy
          conda install -p ${ENV_NAME} ffmpeg
          conda install -p ${ENV_NAME} pytorch torchvision torchaudio pytorch-cuda=${{ matrix.cuda_version }} -c pytorch-nightly -c nvidia
          conda run -p ${ENV_NAME} python3  ./test/smoke_test/smoke_test.py
          ./check_binary.sh
          conda env remove -p ${ENV_NAME}
