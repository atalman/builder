name: Validate MacOS ARM64 Binaries

on:
  workflow_call:
    inputs:
      channel:
        description: "Channel to use (nightly, test, release, all)"
        required: true
        type: string
      ref:
        description: 'Reference to checkout, defaults to empty'
        default: ""
        required: false
        type: string
      torchonly:
        description: 'Validate torchonly'
        default: false
        required: false
        type: boolean
      version:
        description: 'Version to validate - optional'
        default: ""
        required: false
        type: string
  workflow_dispatch:
    inputs:
      channel:
        description: "Channel to use (nightly, test, release, all)"
        required: true
        type: choice
        options:
          - release
          - nightly
          - test
          - all
      ref:
        description: 'Reference to checkout, defaults to empty'
        default: ""
        required: false
        type: string
      torchonly:
        description: 'Validate torchonly'
        default: false
        required: false
        type: boolean
      version:
        description: 'Version to validate - optional'
        default: ""
        required: false
        type: string

jobs:
  generate-macos-arm64-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
    with:
      package-type: all
      os: macos-arm64
      channel: ${{ inputs.channel }}
  generate-release-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_release_matrix.yml@main
    with:
      version: ${{ inputs.version }}
  macos-arm64:
    needs: [generate-macos-arm64-matrix, generate-release-matrix]
    strategy:
      matrix: ${{ fromJson(needs.generate-macos-arm64-matrix.outputs.matrix) }}
      fail-fast: false
    uses: pytorch/test-infra/.github/workflows/macos_job.yml@main
    name: ${{ matrix.build_name }}
    with:
      runner: ${{ matrix.validation_runner }}
      repository: "pytorch/builder"
      ref: ${{ inputs.ref || github.ref }}
      job-name: ${{ matrix.build_name }}
      binary-matrix: ${{ toJSON(matrix) }}
      script: |
        set -ex
        export ENV_NAME="conda-env-${{ github.run_id }}"
        export TARGET_OS="macos-arm64"
        export TORCH_ONLY=${{ inputs.torchonly }}
        export RELEASE_VERSION=${{ inputs.version }}
        printf '%s\n' ${{ toJson(needs.generate-release-matrix.outputs.matrix) }} > release_matrix.json
        source ./.github/scripts/validate_binaries.sh
