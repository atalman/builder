name: Validate Windows binary images

on:
  workflow_call:
    inputs:
      channel:
        description: "Channel to use (nightly, test, release, all)"
        required: true
        type: string
  workflow_dispatch:
    inputs:
      channel:
        description: "Channel to use (nightly, test, release, all)"
        required: true
        type: choice
        options:
          - release
          - nightly
          - test
          - all

jobs:
  generate-windows-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
    with:
      package-type: all
      os: windows
      channel: ${{ inputs.channel }}

  win:
    needs: generate-windows-matrix
    strategy:
      matrix: ${{ fromJson(needs.generate-windows-matrix.outputs.matrix) }}
      fail-fast: false
    uses: pytorch/test-infra/.github/workflows/windows_job.yml@main
    name: ${{ matrix.build_name }}
    with:
      runner: ${{ matrix.validation_runner }}
      repository: "pytorch/builder"
      ref: main
      job-name: ${{ matrix.build_name }}
      script: |
        set -ex
        export ENV_NAME="conda-env-${{ github.run_id }}"
        export GPU_ARCH_VER="${{ matrix.gpu_arch_version }}"
        export GPU_ARCH_TYPE="${{ matrix.gpu_arch_type }}"
        export INSTALLATION="${{ matrix.installation }}"
        export CUDA_VER="${{ matrix.desired_cuda }}"

        if [[ ${{ matrix.package_type }} == "libtorch" ]]; then
          curl ${{ matrix.installation }} -o libtorch.zip
          unzip libtorch.zip
        else
          conda create -y -n ${ENV_NAME} python=${{ matrix.python_version }} numpy pillow
          conda activate ${ENV_NAME}
          eval $INSTALLATION
          python ./test/smoke_test/smoke_test.py
        fi
